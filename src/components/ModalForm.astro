---
export interface Props {
  open: boolean;
  columns: string[];
  onSave: (record: any) => void;
  onClose: () => void;
}
let formData: Record<string, any> = {};
---
{props.open && (
  <div class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
    <div class="bg-white rounded-2xl p-6 w-96 shadow-lg">
      <h2 class="text-xl font-bold mb-4">AÃ±adir Registro</h2>
      <form onSubmit={(e) => {
        e.preventDefault();
        props.onSave(formData);
        props.onClose();
      }}>
        {props.columns.map(col => (
          <div class="mb-3">
            <label class="block text-sm font-medium">{col}</label>
            <input 
              class="w-full px-3 py-2 border rounded-lg"
              type="text"
              onInput={(e) => formData[col] = e.currentTarget.value}
            />
          </div>
        ))}
        <div class="flex justify-end gap-2 mt-4">
          <button type="button" onClick={props.onClose} class="px-4 py-2 rounded-lg bg-gray-300">Cancelar</button>
          <button type="submit" class="px-4 py-2 rounded-lg bg-blue-600 text-white">Guardar</button>
        </div>
      </form>
    </div>
  </div>
)}
